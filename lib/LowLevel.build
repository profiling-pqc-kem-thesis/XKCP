<?xml version="1.0"?>
<!--
The eXtended Keccak Code Package (XKCP)
https://github.com/XKCP/XKCP

Implementation by Gilles Van Assche and Ronny Van Keer, hereby denoted as "the implementer".

For more information, feedback or questions, please refer to the Keccak Team website:
https://keccak.team/

To the extent possible under law, the implementer has waived all copyright
and related or neighboring rights to the source code in this file.
http://creativecommons.org/publicdomain/zero/1.0/
-->
<group>

<!--
The fragments below allow to select the desired implementation of the permutations (a.k.a. low-level services below the SnP or PlSnP interface).

# For Keccak-p[1600]:

* K1600-ref-64bits: the unoptimized reference implementation
* K1600-compact: an implementation aimed at minimizing code and memory sizes
* K1600-plain-64bits-u6: a generically optimized implementation for 64-bit platforms in plain C, with 6 rounds unrolled
* K1600-plain-64bits-ua: same as K1600-plain-64bits-u6 but with all rounds unrolled
* K1600-plain-64bits-lcu6: same as K1600-plain-64bits-u6 but using the lane complementing technique, which is useful for platforms that do not have a "and not" instruction
* K1600-plain-64bits-lcua: same as K1600-plain-64bits-lcu6 but with all rounds unrolled
* K1600-plain-64bits-lcua-shld: same as K1600-plain-64bits-lcua but with the rotation implementation with the 'shld' instruction, as it is faster on some platforms (e.g., SandyBridge)
* K1600-AVX2: an optimized implementation taking advantage of the AVX2 instruction set
* K1600-AVX512: an optimized implementation taking advantage of the AVX-512 instruction set (in assembler)
* K1600-AVX512-C: an optimized implementation taking advantage of the AVX-512 instruction set (in C) [obsolete: K1600-AVX512 is faster]
* K1600-XOP-u6: an optimized implementation taking advantage of the XOP instruction set, with 6 rounds unrolled
* K1600-XOP-ua: same as K1600-XOP-u6, but with all rounds unrolled

-->


    <!-- *** Low-level services *** -->

    <fragment name="optimized">
        <h>lib/common/brg_endian.h</h>
        <gcc>-fomit-frame-pointer</gcc>
        <gcc>-O2</gcc>
        <gcc>-g0</gcc>
        <gcc>-march=native</gcc>
        <gcc>-mtune=native</gcc>
    </fragment>

    <!-- Keccak-p[1600] -->

    <fragment name="K1600">
        <config>XKCP_has_KeccakP1600</config>
    </fragment>

    <fragment name="K1600-ref-64bits" inherits="common K1600">
        <c>lib/low/KeccakP-1600/ref-64bits/KeccakP-1600-reference.c</c>
        <h>lib/low/KeccakP-1600/ref-64bits/KeccakP-1600-reference.h</h>
        <h>lib/low/KeccakP-1600/ref-64bits/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="K1600-compact" inherits="common optimized K1600">
        <c>lib/low/KeccakP-1600/compact/KeccakP-1600-compact64.c</c>
        <h>lib/low/KeccakP-1600/compact/KeccakP-1600-SnP.h</h>
        <h>lib/low/common/SnP-Relaned.h</h>
    </fragment>

    <fragment name="K1600-plain-64bits" inherits="K1600 optimized">
        <c>lib/low/KeccakP-1600/plain-64bits/KeccakP-1600-opt64.c</c>
        <inc>lib/low/KeccakP-1600/common/KeccakP-1600-unrolling.macros</inc>
        <inc>lib/low/KeccakP-1600/common/KeccakP-1600-64.macros</inc>
        <h>lib/low/KeccakP-1600/plain-64bits/KeccakP-1600-SnP.h</h>
        <h>lib/low/common/SnP-Relaned.h</h>
    </fragment>

    <fragment name="K1600-plain-64bits-u6" inherits="K1600-plain-64bits">
        <h>lib/low/KeccakP-1600/plain-64bits/u6/KeccakP-1600-opt64-config.h</h>
    </fragment>

    <fragment name="K1600-plain-64bits-ua" inherits="K1600-plain-64bits">
        <h>lib/low/KeccakP-1600/plain-64bits/ua/KeccakP-1600-opt64-config.h</h>
    </fragment>

    <fragment name="K1600-plain-64bits-lcu6" inherits="K1600-plain-64bits">
        <h>lib/low/KeccakP-1600/plain-64bits/lcu6/KeccakP-1600-opt64-config.h</h>
    </fragment>

    <fragment name="K1600-plain-64bits-lcua" inherits="K1600-plain-64bits">
        <h>lib/low/KeccakP-1600/plain-64bits/lcua/KeccakP-1600-opt64-config.h</h>
    </fragment>

    <fragment name="K1600-plain-64bits-lcua-shld" inherits="K1600-plain-64bits">
        <h>lib/low/KeccakP-1600/plain-64bits/lcua-shld/KeccakP-1600-opt64-config.h</h>
    </fragment>

    <fragment name="K1600-AVX2" inherits="K1600 optimized">
        <s>lib/low/KeccakP-1600/AVX2/KeccakP-1600-AVX2.s</s>
        <h>lib/low/KeccakP-1600/AVX2/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="K1600-AVX512-C" inherits="K1600 optimized">
        <c>lib/low/KeccakP-1600/AVX512/C/KeccakP-1600-AVX512.c</c>
        <h>lib/low/KeccakP-1600/AVX512/C/u12/KeccakP-1600-AVX512-config.h</h>
        <h>lib/low/KeccakP-1600/AVX512/C/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="K1600-AVX512" inherits="K1600 optimized">
        <s>lib/low/KeccakP-1600/AVX512/KeccakP-1600-AVX512.s</s>
        <h>lib/low/KeccakP-1600/AVX512/KeccakP-1600-SnP.h</h>
    </fragment>

    <fragment name="K1600-XOP" inherits="K1600 optimized">
        <c>lib/low/KeccakP-1600/XOP/KeccakP-1600-XOP.c</c>
        <h>lib/low/KeccakP-1600/XOP/KeccakP-1600-SnP.h</h>
        <inc>lib/low/KeccakP-1600/common/KeccakP-1600-unrolling.macros</inc>
        <h>lib/low/common/SnP-Relaned.h</h>
    </fragment>

    <fragment name="K1600-XOP-u6" inherits="K1600-XOP">
        <h>lib/low/KeccakP-1600/XOP/u6/KeccakP-1600-XOP-config.h</h>
    </fragment>

    <fragment name="K1600-XOP-ua" inherits="K1600-XOP">
        <h>lib/low/KeccakP-1600/XOP/ua/KeccakP-1600-XOP-config.h</h>
    </fragment>

</group>
